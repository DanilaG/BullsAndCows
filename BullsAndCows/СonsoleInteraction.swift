//
//  ConsoleInteraction.swift
//  BullsAndCows
//
//  Created by Danila on 06.12.2020.
//

import Foundation

fileprivate enum TextConst: String {
    case confirm = "–¥"
    case refuse = "–Ω"
    case exit = "–≤"
}

func printWelcome() {
    print("""
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—É—é –∏–≥—Ä—É –ë—ã–∫–∏ –ò –ö–æ—Ä–æ–≤—ã!
          –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.
          """)
}

func printRules(numberCapacity: Int) {
    print("""
          –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:
          –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç–µ —á–∏—Å–ª–æ –∏–∑ \(numberCapacity) –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ü–∏—Ñ—Ä.
          –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –æ—Ç–≥–∞–¥–∞—Ç—å –µ–≥–æ.
          –ï—Å–ª–∏ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–º –í–∞–º–∏ —á–∏—Å–ª–µ n —Ü–∏—Ñ—Ä –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ —Ç–µ—Ö –∂–µ –º–µ—Å—Ç–∞—Ö —á—Ç–æ –∏ –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º,
          –í—ã –ø–æ–ª—É—á–∏—Ç–µ n –±—ã–∫–æ–≤.
          –ï—Å–ª–∏ –∂–µ –≤ –≤–µ–¥—ë–Ω–Ω–æ–º –í–∞–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–µ m —Ü–∏—Ñ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –∑–∞–≥–∞–¥–æ—á–Ω–æ–º, –Ω–æ –∏—Ö —Ä–∞–∑—Ä—è–¥—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç,
          –í—ã –ø–æ–ª—É—á–∏—Ç–µ m –∫–æ—Ä–æ–≤.
          """)
}

func printLoserMessage(hiddenNumber: Number, numberCapacity: Int) {
    print("""
          –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!
          –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: \(hiddenNumber.value).
          –ö–∞–∫ –í—ã –≤–æ–æ–±—â–µ —Å—É–º–µ–ª–∏ –¥–æ–∂–∏—Ç—å –¥–æ —Å–≤–æ–∏—Ö –ª–µ—Ç, –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–≥–æ–¥–∞—Ç—å —á–∏—Å–ª–æ –∏–∑ \(numberCapacity) —Å–∏–º–≤–æ–ª–æ–≤?!
          """)
}

func printWinnerMessage() {
    print("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –æ—Ç–≥–∞–¥–∞–ª–∏ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ. üèÜ")
}

func printAttempt(result: AttemptResult) {
    print("–ë—ã–∫–æ–≤: \(result.bulls); –ö–æ—Ä–æ–≤: \(result.cows).")
}

func askNewParty() -> Bool {
    print("–•–æ—Ç–∏—Ç–µ —Å–∏–≥—Ä–∞—Ç—å –Ω–æ–≤—É—é –ø–∞—Ä—Ç–∏—é? (\(TextConst.confirm.rawValue) / \(TextConst.refuse.rawValue))")
    if let answer = readLine() {
        switch answer.lowercased() {
        case TextConst.confirm.rawValue:
            return true
        case TextConst.refuse.rawValue:
            return false
        default:
            print("–í —Å–ª—É—á–∞–µ –µ—Å–ª–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É –≤–≤–µ–¥–∏—Ç–µ \"\(TextConst.confirm.rawValue)\", –∏–Ω–∞—á–µ \"\(TextConst.refuse.rawValue)\".")
            return askNewParty()
        }
    }
    return askNewParty()
}

func askGiveUpOrNumber(capacity: Int) -> Number? {
    print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", terminator: "")
    if let read = readLine() {
        if read.lowercased() == TextConst.exit.rawValue {
            return nil
        }
        if let number = Number(number: read), number.capacity == capacity {
            return number
        }
    }
    print("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –∏–∑ \(capacity) –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ü–∏—Ñ—Ä!")
    print("–ï—Å–ª–∏ –∂–µ –≤—ã —Ä–µ—à–∏–ª–∏ —Å–¥–∞—Ç—å—Å—è –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ \(TextConst.exit.rawValue).")
    return askGiveUpOrNumber(capacity: capacity)
}
